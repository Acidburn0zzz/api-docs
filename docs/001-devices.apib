# Group Devices
Devices are the heart of the Packet ecosystem.

## Devices [/projects/{id}/devices]
A collection of devices for a given project.

+ Parameters
    + id (string) ... Project UUID

### Retrieve all Devices [GET]
Returns a list of the current projects's devices.

+ Response 200

  + Body

            {
              "devices": [
                { "href": "https://api.packet.net/devices/8f10d92c-3c0b-4df4-a9e1-c9fb8ce1a79a" },
                { "href": "https://api.packet.net/devices/73895ed2-d6c6-4229-bb67-ae3143d64148" },
                ...
              ]
            }

### Create a Device [POST]
Creates a new device and provisions it in our datacenter.

Type-specific options (such as `operating_system` for `baremetal` devices)
should be included in the main data structure alongside `hostname` and `plan`.

The `features` attribute allows you to optionally specify what features your
server should have. For example, if you require a server with a [TPM chip](https://en.wikipedia.org/wiki/Trusted_Platform_Module),
you may specify `{ "features": { "tpm": "required" } }` (or `{ "features": ["tpm"] }`
in shorthand). The request will fail if there are no available servers matching
your criteria. Alternatively, if you do not _require_ a certain feature, but
would prefer to be assigned a server with that feature if there are any
available, you may specify that feature with a `preferred` value (see the
example request below). The request will not fail if we have no servers with
that feature in our inventory.

+ Request

  + Body

            {
              "hostname": "web1.example.com",
              "plan": "baremetal_1",
              "billing_cycle": "hourly",
              "facility": "ewr1",
              "features": { "feature_a": "required", "feature_b": "preferred" },
              "operating_system": "coreos_stable",
              "locked": true,
              "userdata": "#cloud-config\n---\nruncmd:\n  - [ ls, -l, / ]",
              "tags": ["database"]
            }

+ Response 201

  + Headers

            Location: https://api.packet.net/devices/1acd244d-5abe-4992-bb63-135a032a001f rel="self"

  + Body

            {
              "href": "https://api.packet.net/devices/1acd244d-5abe-4992-bb63-135a032a001f"
            }


## Device [/devices/{id}]
A single device object.

    + Attributes (object)
        + hostname (string)
        + plan (enum[string])
            + Members
                + baremetal_0 - Type 0
                + baremetal_1 - Type 1
                + baremetal_3 - Type 3
        + billing_cycle (enum[string])
            + Members
                + hourly
        + facility (enum[string]) - Facility Location
            + Members
                + ewr1 - Parsippany, NJ
        + operating_system (enum[string]) - Operating system to install. Valid operating systems vary depending on the selected plan.
        See `/operating-systems` endpoint for information about available operating systems.
            + Members
                + centos_7 - CentOS 7
                + centos_6 - CentOS 6
                + coreos_stable - CoreOS (stable)
                + coreos_beta - CoreOS (beta)
                + coreos_alpha - CoreOS (alpha)
                + debian_8 - Debian 8
                + debian_7 - Debian 7
                + ubuntu_14_04 - Ubuntu 14.04 LTS
        + locked (boolean, optional) - Set locked status
            + Default: false
        + userdata (string, optional) - Userdata you want to process during provision

+ Parameters
    + id (string) ... The device ID in the form of an UUID.


+ Model

            {
              "id": "c8109e92-ae6c-4134-8fd9-8d86a702e7c3",
              "plan": {
                "id": "d3ceef7e-e87d-44d6-a4cb-5571f4f4cd8a"
              },
              "billing_cycle": "daily",
              "hostname": "web1.example.com",
              "state": "active",
              "locked": true,
              "userdata": "#cloud-config\n---\nruncmd:\n  - [ ls, -l, / ]",
              "tags": ["database", "app"],
              "operating_system": {
                "slug": "coreos_stable",
                "name": "CoreOS (Stable)",
                "distro": "coreos",
                "version": "stable"
              },
              "ip_addresses": [
                { "address": "2.3.4.5", "address_family": 4, "public": true },
                { "address": "10.0.0.0", "address_family": 4, "public": false },
                { "address": "2604:1380::1", "address_family": 6, "public": true }
              ],
              "project": {
                "href": "https://api.packet.net/projects/0a315aa2-4513-4780-9093-4d1af8400a7b"
              },
              "created_at": "2014-04-14T02:15:15Z",
              "updated_at": "2014-04-15T02:15:15Z",
              "href": "https://api.packet.net/devices/c8109e92-ae6c-4134-8fd9-8d86a702e7c3"
            }

### Retrieve a Device [GET]
Type-specific options (such as `facility` for `baremetal` devices) will be
included as part of the main data structure.

+ Response 200

  [Device][]

### Update a Device [PATCH]

+ Request

  + Body

            {
              "hostname": "web2.example.com",
              "locked": true,
            }

+ Response 204

### Delete a Device [DELETE]
Deletes a device and deprovisions it in our datacenter.

+ Response 204

## Actions [/devices/{id}/actions]
Perform an action on the specified device.

+ Parameters
  + id (string) ... The device ID to perform the action on.

### Perform an Action [POST]
Performs an action for the given device. Possible actions include:

- power_on
- power_off
- reboot

+ Request

  + Body

            {
              "type": "power_on"
            }

+ Response 202

## Events [/devices/{id}/events]
Provides a list of events pertaining to a specific device.

### List a device's events [GET]

+ Parameters
  + id (string) ... The device ID in the form of a UUID.

+ Response 200

  + Body

            {
              "events": [
                {
                  "id": "55499ca6-5b65-4fca-b7b1-acdb48e19bf5",
                  "type": "provisioning.109",
                  "body": "Installation finished, restarting device",
                  "created_at": "2015-03-10T15:54:54Z",
                  "relationships": [
                    {
                      "id": "30d7377e-fe7f-4ee8-8394-d9440a37a68e"
                    }
                  ],
                  "interpolated": "Installation finished, restarting device",
                  "href": "/events/55499ca6-5b65-4fca-b7b1-acdb48e19bf5"
                },
                ...
              ]
            }

## Locations [/facilities]
Provides a listing of available datacenters where you can provision Packet devices.

### List available locations [GET]

+ Response 200

  + Body

            {
              "facilities": [
                {
                  "id": "6dde1d2e-1c62-4647-b990-14d929aa1797",
                  "name": "Parsippany, NJ",
                  "code": "ewr1",
                  "address": "200 Webro Road",
                  "city": "Parsippany",
                  "state": "NJ",
                  "country": "United States",
                  "coordinates": { "latitude": 40.857084, "longitude": -74.418907 },
                  "features": [ "baremetal" ]
                },
                ...
              ]
            }

## Operating systems [/operating-systems]
Provides a listing of available operating systems to provision your new device with.

### List available OSes [GET]

+ Response 200

  + Body

            {
              "oses": [
                { "slug": "ubuntu_14_04", "name": "Ubuntu 14.04", "distro": "ubuntu", "version": 14.04 },
                { "slug": "coreos_stable", "name": "CoreOS (stable)", "distro": "coreos", "version": "stable" },
                ...
              ]
            }

## Plans [/plans]
Provides a listing of available services plans available to provision your device on.

### List available Plans [GET]

+ Response 200

  + Body

            {
              "plans": [
                {
                  "slug": "baremetal_1",
                  "name": "Type 1",
                  "id": "6d1f1ffa-7912-4b78-b50d-88cc7c8ab40f",
                  "description": "Our Type 1 configuration ...",
                  "pricing": { "hourly": 0.4 },
                  "line": "baremetal",
                  "specs": {
                    "nics": [{ "count": 2, "type": "gigabit" }],
                    "drives": [{ "count": 2, "type": "SSD", "size": "120GB" }],
                    "features": { "txt": true, "raid": true},
                    "cpus": [{ "count": 1, "type": "Intel E3-1240 v3" }],
                    "memory": { "total": "16GB" }
                  }
                },
                ...
              ]
            }

## Device IP Address [/devices/{id}/ips]
Assign an IP address to a device. The IP address must be in one of the IP ranges assigned to the device's project.

### Assign an IP Address [POST]

+ Request

  + Body

            {
              "address": "75.72.66.16/32"
            }

+ Response 201

  + Headers

            Location: https://api.packet.net/devices/8738dd01-7246-443a-95b8-c8c493bd2c9b/ips rel="self"

  + Body

            {
              "id": "6d1f1ffa-7912-4b78-b50d-88cc7c8ab40f",
              "address": "75.72.66.16", // IP address for IPv4 || null for IPv6
              "network": "75.72.66.16", // same as IP address for IPv4 || network address for IPv6
              "address_family": 4,
              "public": true, // true || false
              "cidr": 32,
              "assigned_to": { "href":"/devices/adf8cdfb-9574-4e2f-ae6f-5eaeb4aec5f7" },
              "href": "/ips/6d1f1ffa-7912-4b78-b50d-88cc7c8ab40f"
            }

## IP Address [/ips/{id}]
See information about an IP address assignment.

+ Parameter
  + id (string) ... The IP address ID.

+ Model

            {
              "id": "3c29133a-d10c-4b86-86d4-69b9b16eadb5",
              "address": "75.72.66.16",
              "network": "75.72.66.16",
              "address_family": 4,
              "netmask": "255.255.255.255",
              "public": true,
              "cidr": 32,
              "assigned_to": { "id":"8738dd01-7246-443a-95b8-c8c493bd2c9b" },
              "href": "/ips/3c29133a-d10c-4b86-86d4-69b9b16eadb5"
            }

### View an IP Address [GET]
Returns a single IP address object.

+ Response 200

  [IP Address][]

### Unassign an IP Address [DELETE]
Unassign an IP address record. This will remove the relationship between an IP and the device and will make the IP address available to be assigned to another device.

+ Response 204

## Traffic [/devices/{id}/traffic{?direction,timeframe,interval,bucket}]
Get traffic for a specific device.

+ Parameters
    + id (string) - The device ID in the form of a UUID
    + direction (enum[string]) - Traffic direction
        + Members
            + inbound
            + outbound
    + timeframe (date, required) ... Date UTC format.
      An array with `started_at` and `ended_at` keys.
      For example: `?timeframe['started_at']=2014-09-10T10:00:00Z&timeframe['ended_at']=2014-09-12T10:00:00Z`
    + interval (enum[string], optional) ... Set the interval you want to get from traffic.
        The interval parameter groups results into sub-timeframes spanning a specified length of time. Empty value to avoid grouping results by interval.
        + Members
            + minute - min
            + hour
            + day
            + week
            + month
            + year
            + hour_of_day
            + day_of_week - 0:Sunday, 1:Monday, 2:Tuesday, 3:Wednesday, 4:Thursday, 5:Friday, 6:Saturday
            + day_of_month
            + month_of_year
    + bucket (enum[string], optional) ... Define if the traffic is calculated inside or outside the subnet. Empty value to avoid filtering traffic by bucket.
        + Members
            + internal
            + external

### Device Traffic [GET]
Retrieve device traffic.

+ Request by timeframe

  + Body

            {
                timeframe: {
                    started_at: '2014-09-10T10:00:00Z',
                    ended_at: '2014-09-11T10:00:00Z'
                }
            }

+ Response 200

    + Body

            {
              "metrics": [{
                  "tag": 0,
                  "class_id": "unknown         ",
                  "mac_src": "00:00:00:00:00:00",
                  "mac_dst": "00:00:00:00:00:00",
                  "vlan": 0,
                  "as_src": 0,
                  "as_dst": 0,
                  "ip_src": "192.168.10.2",
                  "ip_dst": "192.168.10.117",
                  "port_src": 6001,
                  "port_dst": 1790,
                  "tcp_flags": 0,
                  "ip_proto": 6,
                  "tos": 192,
                  "packets": 2,
                  "bytes": 1104,
                  "flows": 0,
                  "stamp_inserted": "2015-06-19T17:55:00.000Z",
                  "stamp_updated": "2015-06-19T17:57:01.000Z"
              }, {
                  "tag": 0,
                  "class_id": "unknown         ",
                  "mac_src": "00:00:00:00:00:00",
                  "mac_dst": "00:00:00:00:00:00",
                  "vlan": 0,
                  "as_src": 0,
                  "as_dst": 0,
                  "ip_src": "10.1.1.11",
                  "ip_dst": "10.1.8.241",
                  "port_src": 1790,
                  "port_dst": 6001,
                  "tcp_flags": 0,
                  "ip_proto": 6,
                  "tos": 0,
                  "packets": 1,
                  "bytes": 52,
                  "flows": 0,
                  "stamp_inserted": "2015-06-19T17:55:00.000Z",
                  "stamp_updated": "2015-06-19T17:57:01.000Z"
              },...
            }

+ Request by interval

    + Body

            {
                interval: 'day'
                timeframe: {
                    started_at: '2014-06-19T10:00:00Z',
                    ended_at: '2014-06-25T10:00:00Z'
                }
            }

+ Response 200

    + Body

            {
                "result":[
                    {
                        "datetime":"2015-06-19T17:00:00.000Z",
                        "value":"1104.0"
                    },{
                        "datetime":"2015-06-19T18:00:00.000Z",
                        "value":"6624.0"
                    },{
                        "datetime":"2015-06-19T19:00:00.000Z",
                        "value":"21620090.0"
                    }
                ]
            }
